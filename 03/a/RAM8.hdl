// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way (in=load, sel=address, a=one, b=two, c=three, d=four, e=five, f=six, g=seven, h=eight);

    Register (in=in, load=one, out=oneout);
    Register (in=in, load=two, out=twoout);
    Register (in=in, load=three, out=threeout);
    Register (in=in, load=four, out=fourout);
    Register (in=in, load=five, out=fiveout);
    Register (in=in, load=six, out=sixout);
    Register (in=in, load=seven, out=sevenout);
    Register (in=in, load=eight, out=eightout);

    Mux8Way16 (a=oneout, b=twoout, c=threeout, d=fourout, e=fiveout, f=sixout, g=sevenout, h=eightout, sel=address, out=out);
}
